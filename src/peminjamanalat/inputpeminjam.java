/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package peminjamanalat;
import com.google.zxing.BarcodeFormat;
import com.google.zxing.EncodeHintType;
import com.google.zxing.MultiFormatWriter;
import com.google.zxing.WriterException;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;


import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import com.mysql.cj.jdbc.result.ResultSetMetaData;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
/**
 *
 * @author User
 */
public class inputpeminjam extends javax.swing.JFrame {

    /**
     * Creates new form inputpeminjam
     */
    public inputpeminjam() {
        initComponents();
        setLocationRelativeTo(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPinput1 = new javax.swing.JPanel();
        jPinputpeminjaman = new javax.swing.JPanel();
        jLidpeminjaman = new javax.swing.JLabel();
        jLnis = new javax.swing.JLabel();
        jLnama = new javax.swing.JLabel();
        jLkelas = new javax.swing.JLabel();
        jTFidpeminjam = new javax.swing.JTextField();
        jTFnis = new javax.swing.JTextField();
        jTFkelaspeminjam = new javax.swing.JTextField();
        jTFnamapeminjam = new javax.swing.JTextField();
        jBclearpeminjaman = new javax.swing.JButton();
        jBtambahpeminjaman = new javax.swing.JButton();
        jBeditpeminjaman = new javax.swing.JButton();
        jBhapuspeminjaman = new javax.swing.JButton();
        jLtglpeminjaman = new javax.swing.JLabel();
        jTFtglpeminjaman = new javax.swing.JTextField();
        jLtglpengembalian = new javax.swing.JLabel();
        jTFtglpengembalian = new javax.swing.JTextField();
        jLstatus = new javax.swing.JLabel();
        jTFstatus = new javax.swing.JTextField();
        jPdatapeminjaman = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablepeminjam = new javax.swing.JTable();
        jTFcaripeminjam = new javax.swing.JTextField();
        jBcaripeminjaman = new javax.swing.JButton();
        jBdatapeminjamm = new javax.swing.JButton();
        jBcetakbarcode = new javax.swing.JButton();
        jBkembali = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPinput1.setBackground(new java.awt.Color(57, 62, 70));

        jPinputpeminjaman.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Input Peminjaman", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Impact", 0, 24), new java.awt.Color(238, 238, 238))); // NOI18N
        jPinputpeminjaman.setOpaque(false);

        jLidpeminjaman.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLidpeminjaman.setForeground(new java.awt.Color(242, 242, 242));
        jLidpeminjaman.setText("ID Peminjam");

        jLnis.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLnis.setForeground(new java.awt.Color(242, 242, 242));
        jLnis.setText("NIS");

        jLnama.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLnama.setForeground(new java.awt.Color(242, 242, 242));
        jLnama.setText("Nama");

        jLkelas.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLkelas.setForeground(new java.awt.Color(242, 242, 242));
        jLkelas.setText("Kelas");

        jTFidpeminjam.setBackground(new java.awt.Color(0, 173, 181));
        jTFidpeminjam.setForeground(new java.awt.Color(255, 255, 255));

        jTFnis.setBackground(new java.awt.Color(0, 173, 181));
        jTFnis.setForeground(new java.awt.Color(255, 255, 255));

        jTFkelaspeminjam.setBackground(new java.awt.Color(0, 173, 181));
        jTFkelaspeminjam.setForeground(new java.awt.Color(255, 255, 255));

        jTFnamapeminjam.setBackground(new java.awt.Color(0, 173, 181));
        jTFnamapeminjam.setForeground(new java.awt.Color(255, 255, 255));

        jBclearpeminjaman.setText("Clear");
        jBclearpeminjaman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBclearpeminjamanActionPerformed(evt);
            }
        });

        jBtambahpeminjaman.setText("Tambah");
        jBtambahpeminjaman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtambahpeminjamanActionPerformed(evt);
            }
        });

        jBeditpeminjaman.setText("Edit");
        jBeditpeminjaman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBeditpeminjamanActionPerformed(evt);
            }
        });

        jBhapuspeminjaman.setText("Hapus");
        jBhapuspeminjaman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBhapuspeminjamanActionPerformed(evt);
            }
        });

        jLtglpeminjaman.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLtglpeminjaman.setForeground(new java.awt.Color(242, 242, 242));
        jLtglpeminjaman.setText("Tanggal Peminjaman");

        jTFtglpeminjaman.setBackground(new java.awt.Color(0, 173, 181));

        jLtglpengembalian.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLtglpengembalian.setForeground(new java.awt.Color(242, 242, 242));
        jLtglpengembalian.setText("Tanggal Pengembalian");

        jTFtglpengembalian.setBackground(new java.awt.Color(0, 173, 181));

        jLstatus.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLstatus.setForeground(new java.awt.Color(242, 242, 242));
        jLstatus.setText("Status");

        jTFstatus.setBackground(new java.awt.Color(0, 173, 181));

        javax.swing.GroupLayout jPinputpeminjamanLayout = new javax.swing.GroupLayout(jPinputpeminjaman);
        jPinputpeminjaman.setLayout(jPinputpeminjamanLayout);
        jPinputpeminjamanLayout.setHorizontalGroup(
            jPinputpeminjamanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPinputpeminjamanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPinputpeminjamanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPinputpeminjamanLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBclearpeminjaman))
                    .addGroup(jPinputpeminjamanLayout.createSequentialGroup()
                        .addGroup(jPinputpeminjamanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLnama)
                            .addComponent(jLkelas)
                            .addComponent(jLidpeminjaman)
                            .addComponent(jLnis)
                            .addComponent(jTFidpeminjam, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTFnis, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTFnamapeminjam, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPinputpeminjamanLayout.createSequentialGroup()
                                .addComponent(jBtambahpeminjaman)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jBeditpeminjaman)
                                .addGap(18, 18, 18)
                                .addComponent(jBhapuspeminjaman))
                            .addComponent(jLtglpeminjaman)
                            .addGroup(jPinputpeminjamanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jTFtglpeminjaman, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                                .addComponent(jTFkelaspeminjam, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLtglpengembalian)
                            .addComponent(jLstatus)
                            .addComponent(jTFtglpengembalian, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTFstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 34, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPinputpeminjamanLayout.setVerticalGroup(
            jPinputpeminjamanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPinputpeminjamanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLidpeminjaman)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFidpeminjam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLnis)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFnis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLnama)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFnamapeminjam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLkelas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFkelaspeminjam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLtglpeminjaman)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFtglpeminjaman, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLtglpengembalian)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFtglpengembalian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLstatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jBclearpeminjaman)
                .addGap(18, 18, 18)
                .addGroup(jPinputpeminjamanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtambahpeminjaman)
                    .addComponent(jBeditpeminjaman)
                    .addComponent(jBhapuspeminjaman))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPdatapeminjaman.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data Peminjaman", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Impact", 0, 24), new java.awt.Color(238, 238, 238))); // NOI18N
        jPdatapeminjaman.setOpaque(false);

        jTablepeminjam.setBackground(new java.awt.Color(0, 173, 181));
        jTablepeminjam.setForeground(new java.awt.Color(238, 238, 238));
        jTablepeminjam.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Peminjaman", "NIS", "Nama", "Kelas", "Peminjaman", "Pengembalian", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTablepeminjam);
        if (jTablepeminjam.getColumnModel().getColumnCount() > 0) {
            jTablepeminjam.getColumnModel().getColumn(0).setResizable(false);
            jTablepeminjam.getColumnModel().getColumn(1).setResizable(false);
            jTablepeminjam.getColumnModel().getColumn(2).setResizable(false);
            jTablepeminjam.getColumnModel().getColumn(3).setResizable(false);
            jTablepeminjam.getColumnModel().getColumn(4).setResizable(false);
            jTablepeminjam.getColumnModel().getColumn(5).setResizable(false);
            jTablepeminjam.getColumnModel().getColumn(6).setResizable(false);
        }

        jTFcaripeminjam.setBackground(new java.awt.Color(0, 173, 181));
        jTFcaripeminjam.setForeground(new java.awt.Color(255, 255, 255));

        jBcaripeminjaman.setText("Cari");
        jBcaripeminjaman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBcaripeminjamanActionPerformed(evt);
            }
        });

        jBdatapeminjamm.setText("Data");
        jBdatapeminjamm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBdatapeminjammActionPerformed(evt);
            }
        });

        jBcetakbarcode.setText("Cetak Barcode");
        jBcetakbarcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBcetakbarcodeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPdatapeminjamanLayout = new javax.swing.GroupLayout(jPdatapeminjaman);
        jPdatapeminjaman.setLayout(jPdatapeminjamanLayout);
        jPdatapeminjamanLayout.setHorizontalGroup(
            jPdatapeminjamanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPdatapeminjamanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPdatapeminjamanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPdatapeminjamanLayout.createSequentialGroup()
                        .addComponent(jTFcaripeminjam, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBcaripeminjaman)
                        .addGap(18, 18, 18)
                        .addComponent(jBdatapeminjamm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBcetakbarcode)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPdatapeminjamanLayout.setVerticalGroup(
            jPdatapeminjamanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPdatapeminjamanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPdatapeminjamanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFcaripeminjam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBcaripeminjaman)
                    .addComponent(jBdatapeminjamm)
                    .addComponent(jBcetakbarcode))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jBkembali.setText("Kembali");
        jBkembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBkembaliActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPinput1Layout = new javax.swing.GroupLayout(jPinput1);
        jPinput1.setLayout(jPinput1Layout);
        jPinput1Layout.setHorizontalGroup(
            jPinput1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPinput1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPinputpeminjaman, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPdatapeminjaman, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPinput1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBkembali)
                .addGap(31, 31, 31))
        );
        jPinput1Layout.setVerticalGroup(
            jPinput1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPinput1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jBkembali)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPinput1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPinputpeminjaman, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPdatapeminjaman, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPinput1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPinput1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBdatapeminjammActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBdatapeminjammActionPerformed
        // TODO add your handling code here:
        try {
    Connection conn = dbkoneksi.getConnection();
    Statement stmt = conn.createStatement();
    String query = "SELECT * FROM peminjaman";
    ResultSet rs = stmt.executeQuery(query);

    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("ID Peminjaman");
    model.addColumn("NIS");
    model.addColumn("Nama Peminjam");
    model.addColumn("Kelas");
    model.addColumn("Tanggal Peminjaman");
    model.addColumn("Tanggal Pengembalian");
    model.addColumn("Status");

    while (rs.next()) {
        int idPeminjaman = rs.getInt("id_peminjaman");
        String nis = rs.getString("nis");
        String namaPeminjam = rs.getString("nama_peminjam");
        String kelas = rs.getString("kelas");
        String tanggalPeminjaman = rs.getString("peminjaman");
        String tanggalPengembalian = rs.getString("pengembalian");
        String status = rs.getString("status");

        model.addRow(new Object[]{idPeminjaman, nis, namaPeminjam, kelas, tanggalPeminjaman, tanggalPengembalian, status});
    }

    jTablepeminjam.setModel(model); // Mengatur model tabel dengan model yang telah dibuat

    // Jangan lupa untuk menutup koneksi dan statement
    rs.close();
    stmt.close();
    conn.close();
} catch (SQLException e) {
    e.printStackTrace();
}

    }//GEN-LAST:event_jBdatapeminjammActionPerformed

    private void jBtambahpeminjamanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtambahpeminjamanActionPerformed
        // TODO add your handling code here:
String id = jTFidpeminjam.getText();
String nis = jTFnis.getText();
String nama = jTFnamapeminjam.getText();
String kelas = jTFkelaspeminjam.getText();
String peminjaman = jTFtglpeminjaman.getText();
String pengembalian = jTFtglpengembalian.getText();
String status = jTFstatus.getText();

if (id.isEmpty() || nama.isEmpty() || nis.isEmpty() || nama.isEmpty() || kelas.isEmpty() || peminjaman.isEmpty() 
        || pengembalian.isEmpty() || status.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Harap isi semua kolom", "Coba lagi", JOptionPane.ERROR_MESSAGE);
} else {
    try {
        DefaultTableModel model = (DefaultTableModel) jTablepeminjam.getModel();
        model.addRow(new Object[]{id, nis, nama, kelas, peminjaman, pengembalian, status});

        jTFidpeminjam.setText("");
        jTFnis.setText("");
        jTFnamapeminjam.setText("");
        jTFkelaspeminjam.setText("");
        jTFtglpeminjaman.setText("");
        jTFtglpengembalian.setText("");
        jTFstatus.setText("");

        Connection k = dbkoneksi.getConnection();
        Statement s = k.createStatement();
        String q = "INSERT INTO peminjaman "
                 + "(id_peminjam, nis, nama_peminjam, kelas, peminjaman, pengembalian, status) "
                 + "VALUES ('" + id + "','" + nis + "','" + nama + "','" + kelas + "','" + peminjaman + "','"
                + pengembalian + "','" + status + "')";
        s.executeUpdate(q);
        System.out.println("Data berhasil disimpan ke database!");
    } catch (SQLException e) {
        System.err.println("Error: " + e.getMessage());
    }
}
    }//GEN-LAST:event_jBtambahpeminjamanActionPerformed

    private void jBeditpeminjamanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBeditpeminjamanActionPerformed
        // TODO add your handling code here:
 int row = jTablepeminjam.getSelectedRow(); // Mendapatkan baris yang dipilih di tabel
if (row < 0) {
    JOptionPane.showMessageDialog(this, "Pilih salah satu data!", "Coba lagi!", JOptionPane.ERROR_MESSAGE);
} else {
    DefaultTableModel model = (DefaultTableModel) jTablepeminjam.getModel();

    int idToUpdate = Integer.parseInt(model.getValueAt(row, 0).toString()); // Ambil nilai ID dari baris yang dipilih

    String newid = jTFidpeminjam.getText(); // Mengambil nilai yang ingin diperbarui dari field atau inputan
    String newnis = jTFnis.getText();
    String newnamapeminjam = jTFnamapeminjam.getText();
    String newkelaspeminjam = jTFkelaspeminjam.getText();
    String newtglpeminjaman = jTFtglpeminjaman.getText();
    String newtglpengembalian = jTFtglpengembalian.getText();
    String newstatus = jTFstatus.getText();
    // Mengambil nilai yang ingin diperbarui dari field atau inputan

    if (newid.isEmpty() || newnis.isEmpty() || newnamapeminjam.isEmpty() || newkelaspeminjam.isEmpty() || newtglpeminjaman.isEmpty() || newtglpengembalian.isEmpty() || newstatus.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Harap isi semua kolom", "Coba lagi", JOptionPane.ERROR_MESSAGE);
    } else {
        try {
            // Menghapus baris yang ada di tabel
            model.removeRow(row);

            // Menambahkan baris dengan data yang diperbarui
            model.insertRow(row, new Object[]{idToUpdate, newid, newnis, newnamapeminjam, newkelaspeminjam, newtglpeminjaman, newtglpengembalian, newstatus});

            Connection conn = dbkoneksi.getConnection();
            Statement stmt = conn.createStatement();
            String query = "UPDATE nama_tabel SET id_peminjam = '" + newid + "', nis = '" + newnis + "', nama_peminjam = '" + newnamapeminjam + "', kelas = '" + newkelaspeminjam + "', peminjaman = '" + newtglpeminjaman + "', pengembalian = '" + newtglpengembalian + "', status = '" + newstatus + "' WHERE id_peminjam = " + idToUpdate;
            stmt.executeUpdate(query);
            System.out.println("Data berhasil diperbarui di database!");
            stmt.close();
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}

    }//GEN-LAST:event_jBeditpeminjamanActionPerformed

    private void jBhapuspeminjamanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBhapuspeminjamanActionPerformed
        // TODO add your handling code here:
        int row = jTablepeminjam.getSelectedRow();
    
    if (row < 0) {
        JOptionPane.showMessageDialog(this,"Pilih salah satu data!", "Coba lagi!", JOptionPane.ERROR_MESSAGE);
    } else {
        DefaultTableModel model = (DefaultTableModel) jTablepeminjam.getModel();
        int kodeToDelete = Integer.parseInt(model.getValueAt(row, 0).toString()); 
        model.removeRow(row);
        
        try {
            Connection k = dbkoneksi.getConnection();
            Statement s = k.createStatement();
            String q = "DELETE FROM peminjaman WHERE id_peminjaman=" + kodeToDelete; 
            s.executeUpdate(q);
            System.out.println("Data berhasil dihapus dari database!");
        } catch (SQLException e) {
            System.err.println("Error: " + e.getMessage());
        }
    }
    }//GEN-LAST:event_jBhapuspeminjamanActionPerformed

    private void jBcaripeminjamanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBcaripeminjamanActionPerformed
        // TODO add your handling code here:
DefaultTableModel model = new DefaultTableModel();

// Kolom-kolom yang ingin ditampilkan di tabel
model.addColumn("ID Peminjam");
model.addColumn("Nama Peminjam");
model.addColumn("Kelas");
model.addColumn("Tanggal Peminjaman");
model.addColumn("Tanggal Pengembalian");
model.addColumn("Status");

try {
    String searchTerm = jTFcaripeminjam.getText(); // Ambil teks pencarian
    Connection conn = dbkoneksi.getConnection();
    Statement stmt = conn.createStatement();
    String query = "SELECT id_peminjam, nama_peminjam, kelas, peminjaman, pengembalian, status FROM peminjaman WHERE nama_peminjam LIKE '%" + searchTerm + "%'";
    ResultSet rs = stmt.executeQuery(query);

    while (rs.next()) {
        Object[] row = {
            rs.getInt("id_peminjam"),
            rs.getString("nama_peminjam"),
            rs.getString("kelas"),
            rs.getString("peminjaman"),
            rs.getString("pengembalian"),
            rs.getString("status")
        };
        model.addRow(row);
    }

    rs.close();
    stmt.close();
    conn.close();
} catch (SQLException ex) {
    ex.printStackTrace();
}

jTablepeminjam.setModel(model);

    
    }//GEN-LAST:event_jBcaripeminjamanActionPerformed

    private void jBclearpeminjamanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBclearpeminjamanActionPerformed
        // TODO add your handling code here:
        jTFidpeminjam.setText("");
        jTFnis.setText("");
        jTFnamapeminjam.setText("");
        jTFkelaspeminjam.setText("");
    }//GEN-LAST:event_jBclearpeminjamanActionPerformed

    private void jBkembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBkembaliActionPerformed
        // TODO add your handling code here:
        new main().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jBkembaliActionPerformed

    private void jBcetakbarcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBcetakbarcodeActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTablepeminjam.getSelectedRow();
if (selectedRow != -1) {
    String id = String.valueOf(jTablepeminjam.getValueAt(selectedRow, 0)); // Ganti indeks kolom sesuai dengan kolom yang berisi ID

    if (id.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Isi ID terlebih dahulu", "Coba lagi", JOptionPane.ERROR_MESSAGE);
    } else {
        String data = id;
        String directory = "D:\\barcodes";
        String path = directory + "\\" + id + ".png";
        String charset = "UTF-8";
        Map<EncodeHintType, ErrorCorrectionLevel> hashMap = new HashMap<>();

        hashMap.put(EncodeHintType.ERROR_CORRECTION, ErrorCorrectionLevel.L);

        try {
            BitMatrix matrix = new MultiFormatWriter().encode(
                    new String(data.getBytes(charset), charset),
                    BarcodeFormat.QR_CODE, 200, 200);

            MatrixToImageWriter.writeToFile(
                    matrix,
                    path.substring(path.lastIndexOf('.') + 1),
                    new File(path));
            System.out.println("Barcode berhasil dibuat di: " + path);
        } catch (WriterException | IOException e) {
            e.printStackTrace();
        }
    }
} else {
    JOptionPane.showMessageDialog(this, "Pilih baris terlebih dahulu", "Coba lagi", JOptionPane.ERROR_MESSAGE);
}

    }//GEN-LAST:event_jBcetakbarcodeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(inputpeminjam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(inputpeminjam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(inputpeminjam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(inputpeminjam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new inputpeminjam().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBcaripeminjaman;
    private javax.swing.JButton jBcetakbarcode;
    private javax.swing.JButton jBclearpeminjaman;
    private javax.swing.JButton jBdatapeminjamm;
    private javax.swing.JButton jBeditpeminjaman;
    private javax.swing.JButton jBhapuspeminjaman;
    private javax.swing.JButton jBkembali;
    private javax.swing.JButton jBtambahpeminjaman;
    private javax.swing.JLabel jLidpeminjaman;
    private javax.swing.JLabel jLkelas;
    private javax.swing.JLabel jLnama;
    private javax.swing.JLabel jLnis;
    private javax.swing.JLabel jLstatus;
    private javax.swing.JLabel jLtglpeminjaman;
    private javax.swing.JLabel jLtglpengembalian;
    private javax.swing.JPanel jPdatapeminjaman;
    private javax.swing.JPanel jPinput1;
    private javax.swing.JPanel jPinputpeminjaman;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFcaripeminjam;
    private javax.swing.JTextField jTFidpeminjam;
    private javax.swing.JTextField jTFkelaspeminjam;
    private javax.swing.JTextField jTFnamapeminjam;
    private javax.swing.JTextField jTFnis;
    private javax.swing.JTextField jTFstatus;
    private javax.swing.JTextField jTFtglpeminjaman;
    private javax.swing.JTextField jTFtglpengembalian;
    private javax.swing.JTable jTablepeminjam;
    // End of variables declaration//GEN-END:variables
}
